/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a08060405234620000895760016002556101d28181016001600160401b038111838210176200007357829162004e3c833903906000f080156200006757608052604051614dad90816200008f82396080518181816110270152818161333b01526135b80152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021614754565b005b60003560e01c80630396cb60146101b35780630bd28e3b146101aa5780631b2e01b8146101a15780631d732756146101985780631fad948c1461018f578063205c28781461018657806335567e1a1461017d5780634b1d7cf5146101745780635287ce121461016b57806370a08231146101625780638f41ec5a14610159578063957122ab146101505780639b249f6914610147578063a61935311461013e578063b760faf914610135578063bb9fe6bf1461012c578063c23a5cea14610123578063d6383f941461011a578063ee219423146101115763fc7e286d0361000e5761010c6116af565b61000e565b5061010c6114d8565b5061010c61139b565b5061010c611263565b5061010c611142565b5061010c611121565b5061010c611100565b5061010c610fc3565b5061010c610e5c565b5061010c610e3f565b5061010c610dec565b5061010c610cd5565b5061010c610998565b5061010c610926565b5061010c610806565b5061010c61072c565b5061010c6105b3565b5061010c6103bc565b5061010c610327565b50602036600319011261030c5760043563ffffffff811680820361030c576103077fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0191610246610216336001600160a01b03166000526000602052604060002090565b91610222811515614859565b61023f610236600185015463ffffffff1690565b63ffffffff1690565b11156148a4565b54926102e96001600160701b03946102b461026634888460781c16611b57565b966102728815156148ef565b61027e8189111561493a565b61029b8161028a6104e9565b941684906001600160701b03169052565b6001602084015287166001600160701b03166040830152565b63ffffffff83166060820152600060808201526102e4336001600160a01b03166000526000602052604060002090565b614985565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b602435906001600160c01b038216820361030c57565b503461030c57602036600319011261030c576004356001600160c01b038116810361030c57610376903360005260016020526040600020906001600160c01b0316600052602052604060002090565b6103808154611d7d565b9055005b6001600160a01b0381160361030c57565b602435906103a282610384565b565b60c435906103a282610384565b35906103a282610384565b503461030c57604036600319011261030c5760206104156004356103df81610384565b6001600160a01b036103ef610311565b9116600052600183526040600020906001600160c01b0316600052602052604060002090565b54604051908152f35b50634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761045157604052565b61045961041e565b604052565b610100810190811067ffffffffffffffff82111761045157604052565b67ffffffffffffffff811161045157604052565b6060810190811067ffffffffffffffff82111761045157604052565b6040810190811067ffffffffffffffff82111761045157604052565b90601f8019910116810190811067ffffffffffffffff82111761045157604052565b604051906103a282610435565b6040519060c0820182811067ffffffffffffffff82111761045157604052565b604051906103a2826104ab565b60209067ffffffffffffffff8111610541575b601f01601f19160190565b61054961041e565b610536565b92919261055a82610523565b9161056860405193846104c7565b82948184528183011161030c578281602093846000960137010152565b9181601f8401121561030c5782359167ffffffffffffffff831161030c576020838186019501011161030c57565b503461030c576101c036600319011261030c5767ffffffffffffffff60043581811161030c573660238201121561030c576105f890369060248160040135910161054e565b903660231901610180811261030c576101006040519161061783610435565b1261030c576040516106288161045e565b610630610395565b815260443560208201526064356040820152608435606082015260a435608082015261065a6103a4565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a43591821161030c576106ce926106b66106be933690600401610585565b9290916120e2565b6040519081529081906020820190565b0390f35b90604060031983011261030c5760043567ffffffffffffffff9283821161030c578060238301121561030c57816004013593841161030c5760248460051b8301011161030c57602401919060243561072981610384565b90565b503461030c5761073b366106d2565b610746929192611897565b61074f836117dd565b60005b8481106107cf57506000927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a183915b85831061079f57610795858561191a565b6100216001600255565b9091936001906107c56107b3878987611866565b6107bd8886611844565b519088611c76565b0194019190610784565b806107fd6107f66107e4600194869896611844565b516107f0848a88611866565b84612a9f565b9083612685565b01929092610752565b503461030c57604036600319011261030c5760043561082481610384565b6024359060009133835282602052604083206001600160701b03815416928383116108e25784836001600160a01b03829593610892849661087861086c87986108df9c611b42565b6001600160701b031690565b6001600160701b03166001600160701b0319825416179055565b604080516001600160a01b03831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af16108d96118ea565b50614c14565b80f35b606460405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b503461030c57604036600319011261030c57602060043561094681610384565b6001600160a01b03610956610311565b911660005260018252610980816040600020906001600160c01b0316600052602052604060002090565b546040805192901b67ffffffffffffffff1916178152f35b503461030c576109a7366106d2565b6109af611897565b6000805b838210610b7c576109c491506117dd565b7fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000805b848110610aef57505060008093815b818110610a3357610795868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a261191a565b610a8a610a4182848a611d99565b610a5f610a53610a5360208401611dff565b6001600160a01b031690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a280611dc9565b906000915b808310610aa757505050610aa290611d7d565b6109fc565b90919497610ae2610adc610ae892610ad68c8b610acf82610ac98e8b8d611866565b92611844565b5191611c76565b90611b57565b99611d7d565b95611d7d565b9190610a8f565b610afa818688611d99565b6020610b12610b098380611dc9565b92909301611dff565b916001600160a01b0360009316905b828410610b3a5750505050610b3590611d7d565b6109ed565b90919294610ae281610b6f85610b68610b56610b74968d611844565b51610b628c8b8a611866565b85612a9f565b908b61282c565b611d7d565b929190610b21565b610b87828587611d99565b90610b928280611dc9565b92610ba2610a5360208301611dff565b916001600160a01b038316610bba6001821415611e09565b610bdb575b505050610bd591610bcf91611b57565b91611d7d565b906109b3565b909592610bf460409996939998959897888101906119ca565b92908a3b1561030c5789938b918a5193849283927fe3563a4f00000000000000000000000000000000000000000000000000000000845260049e8f850193610c3b94611f5e565b03815a93600094fa9081610cbc575b50610ca6578888610ca289610c65610c60611fe5565b614cab565b517f86a9f7500000000000000000000000000000000000000000000000000000000081526001600160a01b03909316918301918252829160200190565b0390fd5b9497509295509093509181610bcf610bd5610bbf565b80610cc9610ccf9261047b565b80610e34565b38610c4a565b503461030c57602036600319011261030c576106ce6001600160a01b03600435610cfe81610384565b608060409283928351610d1081610435565b600093818580935282602082015282878201528260608201520152168152806020522090610d9865ffffffffffff6001835194610d4c86610435565b80546001600160701b038082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956001600160701b03808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b503461030c57602036600319011261030c576001600160a01b03600435610e1281610384565b16600052600060205260206001600160701b0360406000205416604051908152f35b600091031261030c57565b503461030c57600036600319011261030c57602060405160018152f35b503461030c57606036600319011261030c57600467ffffffffffffffff813581811161030c57610e8f9036908401610585565b905060243591610e9e83610384565b60443590811161030c57610eb59036908501610585565b929091159081610fb9575b50610f6c576014821015610ef6575b610ca28360405191829162461bcd60e51b8352820160409060208152600060208201520190565b610f06610f1292610f0c92612341565b9061234f565b60601c90565b3b15610f1f573880610ecf565b610ca29060405191829162461bcd60e51b8352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b610ca28360405191829162461bcd60e51b8352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b1538610ec0565b503461030c57602036600319011261030c5760043567ffffffffffffffff811161030c57610ff76024913690600401610585565b90611014604051928392632b870d1b60e11b8452600484016124c5565b036020826001600160a01b0392816000857f0000000000000000000000000000000000000000000000000000000000000000165af19182156110b9575b600092611089575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b6110ab91925060203d81116110b2575b6110a381836104c7565b8101906124b0565b9038611059565b503d611099565b6110c1611b1e565b611051565b908161016091031261030c5790565b602060031982011261030c576004359067ffffffffffffffff821161030c57610729916004016110c6565b503461030c576020611119611114366110d5565b6121fd565b604051908152f35b50602036600319011261030c5761002160043561113d81610384565b614801565b503461030c57600080600319360112611260573381528060205260408120600181019063ffffffff82541690811561121c576111c96111a36111e193611195611190855460ff9060701c1690565b614a83565b65ffffffffffff4216614ace565b845469ffffffffffff000000001916602082901b69ffffffffffff000000001617909455565b80546eff000000000000000000000000000019169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b606460405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b80fd5b503461030c57602036600319011261030c5760043561128181610384565b6108df6001600160a01b036112a9336001600160a01b03166000526000602052604060002090565b926113456112c561086c86546001600160701b039060781c1690565b946112d1861515614ae8565b61131d6001820161130a65ffffffffffff6112f6835465ffffffffffff9060201c1690565b16611302811515614b33565b421015614b7e565b805469ffffffffffffffffffff19169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b604080516001600160a01b03831681526020810186905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2600080809581948294165af16113956118ea565b50614bc9565b503461030c57606036600319011261030c5767ffffffffffffffff60043581811161030c576113ce9036906004016110c6565b602435916113db83610384565b60443590811161030c576113f6610ca2913690600401610585565b6113fe61175a565b61140785612599565b61141a61141482876128f0565b906144f6565b9461142a82600092438452611b64565b9643825281936060956001600160a01b0383166114a4575b5050505060800151936114716040611463602084015165ffffffffffff1690565b92015165ffffffffffff1690565b906040519687967f8b7ac9800000000000000000000000000000000000000000000000000000000088526004880161202c565b839550839496506114be604094929394518094819361201e565b03925af19060806114cd6118ea565b929190388080611442565b503461030c576114e7366110d5565b6114ef61175a565b6114f882612599565b61150281836128f0565b825160a00151919391611522906001600160a01b0316614713565b614713565b9061153961151d85516001600160a01b0390511690565b94611542612309565b50611571611555604095868101906119ca565b906000601483106116a75750610f0661151d92610f0c92612341565b9161157b916144f6565b80516001600160a01b0316906001600160a01b038216600181149160808801519787810151918860208201516115b69065ffffffffffff1690565b91015165ffffffffffff169160600151926115cf6104f6565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a08801521515908161169e575b506116405750610ca292519485947fe0cff05f00000000000000000000000000000000000000000000000000000000865260048601612456565b9190610ca29361164f84614713565b61166961165a610516565b6001600160a01b039096168652565b6020850152519586957ffaecb4e4000000000000000000000000000000000000000000000000000000008752600487016123d1565b90501538611606565b915050614713565b503461030c57602036600319011261030c576001600160a01b036004356116d581610384565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926001600160701b0390818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b60209067ffffffffffffffff811161174d575b60051b0190565b61175561041e565b611746565b6040519061176782610435565b604051608083610100830167ffffffffffffffff8111848210176117d0575b60405260009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b6117d861041e565b611786565b906117e782611733565b6117f460405191826104c7565b8281528092611805601f1991611733565b019060005b82811061181657505050565b60209061182161175a565b8282850101520161180a565b50634e487b7160e01b600052603260045260246000fd5b6020918151811015611859575b60051b010190565b61186161182d565b611851565b919081101561188a575b60051b8101359061015e198136030182121561030c570190565b61189261182d565b611870565b60028054146118a65760028055565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b3d15611915573d906118fb82610523565b9161190960405193846104c7565b82523d6000602084013e565b606090565b6001600160a01b0316801561198657600080809381935af161193a6118ea565b501561194257565b606460405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b606460405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b903590601e198136030182121561030c570180359067ffffffffffffffff821161030c5760200191813603831361030c57565b9081602091031261030c575190565b908060209392818452848401376000828201840152601f01601f1916010190565b60005b838110611a405750506000910152565b8181015183820152602001611a30565b90602091611a6981518092818552858086019101611a2d565b601f01601f1916010190565b90611a8f60809161072996946101c0808652850191611a0c565b9360e081516001600160a01b0380825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611a50565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b91908203918211611b4f57565b6103a2611b2b565b91908201809211611b4f57565b905a91816020611b7d60608301519360608101906119ca565b90611b9d856040519586948594630eb993ab60e11b865260048601611a75565b03816000305af160009181611c46575b50611c3f575060206000803e63deaddead60e01b60005114611beb57611be5611bda610729945a90611b42565b608084015190611b57565b91613de3565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9250505090565b611c6891925060203d8111611c6f575b611c6081836104c7565b8101906119fd565b9038611bad565b503d611c56565b909291925a93806020611c9260608301519460608101906119ca565b90611cb2866040519586948594630eb993ab60e11b865260048601611a75565b03816000305af160009181611d5d575b50611d56575060206000803e63deaddead60e01b60005114611d0157611cfb611cf061072995965a90611b42565b608083015190611b57565b9261402f565b610ca283604051918291631101335b60e11b835260048301608091815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9450505050565b611d7691925060203d8111611c6f57611c6081836104c7565b9038611cc2565b6001906000198114611d8d570190565b611d95611b2b565b0190565b9190811015611dbc575b60051b81013590605e198136030182121561030c570190565b611dc461182d565b611da3565b903590601e198136030182121561030c570180359067ffffffffffffffff821161030c57602001918160051b3603831361030c57565b3561072981610384565b15611e1057565b606460405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b9035601e198236030181121561030c57016020813591019167ffffffffffffffff821161030c57813603831361030c57565b61072991611ea481611e97846103b1565b6001600160a01b03169052565b60208201356020820152611f3f611ef0611ed5611ec46040860186611e54565b610160806040880152860191611a0c565b611ee26060860186611e54565b908583036060870152611a0c565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101008085013590840152610120611f3281860186611e54565b9185840390860152611a0c565b91611f506101409182810190611e54565b929091818503910152611a0c565b949391929083604087016040885252606086019360608160051b8801019482600090815b848310611fa15750505050505084602061072995968503910152611a0c565b909192939497605f198b8203018552883561015e1984360301811215611fe15760019184611fcf9201611e86565b98602090810196950193019190611f82565b8280fd5b60405190611ff2826104ab565b601b82527f7369672076616c69646174696f6e20676f7420726576657274656400000000006020830152565b908092918237016000815290565b92909361072996959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611a50565b1561206f57565b606460405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b90604061072992600081528160208201520190611a50565b604090610729939281528160208201520190611a50565b909291925a936120f3303314612068565b8151946040860151955a6113886060830151890101116121ec5761072996600095805161213a575b50505090612134915a900360808401510194369161054e565b9161421a565b61215c916121589161215385516001600160a01b031690565b614c6a565b1590565b612168575b808061211b565b61213492919450612177614c7c565b90815161218b575b50506001939091612161565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2016001600160a01b036020870151926121e260206121d083516001600160a01b031690565b920151956040519384931696836120cb565b0390a3388061217f565b63deaddead60e01b60005260206000fd5b61221361220d60408301836119ca565b90614c5f565b9061222461220d60608301836119ca565b906122c061223961220d6101208401846119ca565b60405194859360208501956101008201359260e08301359260c08101359260a0820135926080830135926001600160a01b0360208201359135168c9693909a999895926101209895926001600160a01b036101408a019d168952602089015260408801526060870152608086015260a085015260c084015260e08301526101008201520152565b03916122d4601f19938481018352826104c7565b5190206040805160208101928352309181019190915246606082015260809283018152909161230390826104c7565b51902090565b604051906040820182811067ffffffffffffffff821117612334575b60405260006020838281520152565b61233c61041e565b612325565b9060141161030c5790601490565b6bffffffffffffffffffffffff19903581811693926014811061237157505050565b60140360031b82901b16169150565b9060c060a061072993805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611a50565b92946124326103a29561242061010095999861240e6123fa602097610140808c528b0190612380565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b6001600160a01b0381511660e0850152015191019060208091805184520151910152565b61249f6103a29461248d61247860a0959998969960e0865260e0860190612380565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b9081602091031261030c575161072981610384565b916020610729938181520191611a0c565b906124f86001600160a01b039161072997959694606085526060850191611a0c565b941660208201526040818503910152611a0c565b60009060033d1161251957565b905060046000803e60005160e01c90565b600060443d1061072957604051600319913d83016004833e815167ffffffffffffffff918282113d60248401111761258857818401948551938411612590573d850101602084870101116125885750610729929101602001906104c7565b949350505050565b50949350505050565b6125a660408201826119ca565b6125be6125b284611dff565b936101208101906119ca565b9290303b1561030c576000936126029160405196879586957f957122ab000000000000000000000000000000000000000000000000000000008752600487016124d6565b0381305afa9081612672575b506103a257600161261d61250c565b6308c379a014612636575b61262e57565b6103a2611b1e565b61263e61252a565b8061264a575b50612628565b8051600092501561264457610ca290604051918291631101335b60e11b8352600483016120b3565b80610cc961267f9261047b565b3861260e565b919061269090612856565b6001600160a01b03929183166127d757612782576126ad90612856565b911661272d576126ba5750565b60408051631101335b60e11b815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b610ca282604051918291631101335b60e11b835260048301608091815260406020820152601460408201527f41413334207369676e6174757265206572726f7200000000000000000000000060608201520190565b610ca283604051918291631101335b60e11b835260048301608091815260406020820152601760408201527f414132322065787069726564206f72206e6f742064756500000000000000000060608201520190565b610ca284604051918291631101335b60e11b835260048301608091815260406020820152601460408201527f41413234207369676e6174757265206572726f7200000000000000000000000060608201520190565b92919061283890612856565b90926001600160a01b03808095169116036127d757612782576126ad905b801561289c57612865906144a8565b6001600160a01b0365ffffffffffff80604084015116421190811561288c575b5091511691565b9050602083015116421038612885565b50600090600090565b156128ac57565b606460405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152fd5b916000915a938151906129038282612c97565b61290c816121fd565b602084015261294a6effffffffffffffffffffffffffffff60808401516060850151176040850151176101008401359060e0850135171711156128a5565b61295382612d3f565b61295e818584612e2c565b979061298261215861297787516001600160a01b031690565b60208801519061459b565b612a4b5761298f43600052565b6001600160a01b036129ad60a060609701516001600160a01b031690565b16612a31575b505a810360a0840135106129dd5760809360c092604087015260608601525a900391013501910152565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601e60408201527f41413430206f76657220766572696669636174696f6e4761734c696d6974000060608201520190565b90935081612a429297508584613932565b959092386129b3565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601a60408201527f4141323520696e76616c6964206163636f756e74206e6f6e636500000000000060608201520190565b9290916000925a8251612ab28184612c97565b612abb836121fd565b6020850152612af96effffffffffffffffffffffffffffff60808301516060840151176040840151176101008601359060e0870135171711156128a5565b612b0281612d3f565b612b0e8186868b6130ee565b9890612b32612158612b2786516001600160a01b031690565b60208701519061459b565b612bf757612b3f43600052565b6001600160a01b03612b5d60a060609601516001600160a01b031690565b16612bdc575b505a840360a086013510612b8f5750604085015260608401526080919060c0905a900391013501910152565b60408051631101335b60e11b815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b90925081612bee929850868685613b58565b96909138612b63565b610ca282604051918291631101335b60e11b835260048301608091815260406020820152601a60408201527f4141323520696e76616c6964206163636f756e74206e6f6e636500000000000060608201520190565b15612c5357565b606460405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b612cfc90612cb4612ca782611dff565b6001600160a01b03168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e08401526101208101906119ca565b908115612d3457612d26610f0c610f068460a094612d2160146103a299981015612c4c565b612341565b6001600160a01b0316910152565b505060a06000910152565b60a08101516001600160a01b031615612d745760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001612d57565b612d9560409295949395606083526060830190611e86565b9460208201520152565b60405190612dac826104ab565b601882527f7472616e73616374696f6e20676f7420726576657274656400000000000000006020830152565b906103a2602f60405180947f414132332072657665727465643a2000000000000000000000000000000000006020830152612e1c8151809260208686019101611a2d565b810103600f8101855201836104c7565b916000926000925a93612ed36020835193612e4e85516001600160a01b031690565b95612e66612e5f60408301836119ca565b90846132e6565b60a08601516001600160a01b031690612e7e43600052565b8580936001600160a01b0380941615988961309a575b60600151908601516040517f3a871cdd000000000000000000000000000000000000000000000000000000008152978896879586939060048501612d7d565b03938a1690f182918161307a575b506130715750600190612ef261250c565b6308c379a01461302b575b50612fcc575b612f10575b50505a900391565b612f2d906001600160a01b03166000526000602052604060002090565b612f4161086c82546001600160701b031690565b808311612f7857612f71926001600160701b039103166001600160701b03166001600160701b0319825416179055565b3880612f08565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601760408201527f41413231206469646e2774207061792070726566756e6400000000000000000060608201520190565b612fd7610c60612d9f565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b61303361252a565b908161303f5750612efd565b610ca2916130589150613053610c60612d9f565b612dd8565b604051918291631101335b60e11b8352600483016120b3565b9550612f039050565b61309391925060203d8111611c6f57611c6081836104c7565b9038612ee1565b94506130cc61086c6130bf8c6001600160a01b03166000526000602052604060002090565b546001600160701b031690565b8b8111156130e35750856060835b96915050612e94565b606087918d036130da565b90926000936000935a9461312a602083519361311185516001600160a01b031690565b95612e6661312260408301836119ca565b90848c613560565b03938a1690f18291816132c6575b506132bd575060019061314961250c565b6308c379a01461327a575b5061321a575b613168575b5050505a900391565b613185906001600160a01b03166000526000602052604060002090565b9161319a61086c84546001600160701b031690565b908183116131cd575082546dffffffffffffffffffffffffffff19169190036001600160701b031617905538808061315f565b60408051631101335b60e11b815260048101929092526024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b610ca284613229610c60612d9f565b604051918291631101335b60e11b835260048301608091815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b61328261252a565b908161328e5750613154565b86916132a09150613053610c60612d9f565b90610ca2604051928392631101335b60e11b8452600484016120cb565b965061315a9050565b6132df91925060203d8111611c6f57611c6081836104c7565b9038613138565b9091806132f257505050565b8151516001600160a01b031692833b61350c5760608351015160405190632b870d1b60e11b82526020828061332b8787600484016124c5565b038160006001600160a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f19182156134ff575b6000926134df575b5080821695861561348b5716809503613437573b156133e357610f0c610f067fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d936133b793612341565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a3565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152602060408201527f4141313520696e6974436f6465206d757374206372656174652073656e64657260608201520190565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b6134f891925060203d81116110b2576110a381836104c7565b903861336d565b613507611b1e565b613365565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601f60408201527f414131302073656e64657220616c726561647920636f6e73747275637465640060608201520190565b9290918161356f575b50505050565b8251516001600160a01b031693843b61378c5760608451015160405190632b870d1b60e11b8252602082806135a88888600484016124c5565b038160006001600160a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f191821561377f575b60009261375f575b5080821696871561370a57168096036136b5573b156136685750610f0c610f067fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d9361363593612341565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a338808080613569565b60408051631101335b60e11b815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b610ca282604051918291631101335b60e11b835260048301608091815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b610ca284604051918291631101335b60e11b835260048301608091815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b61377891925060203d81116110b2576110a381836104c7565b90386135ea565b613787611b1e565b6135e2565b60408051631101335b60e11b815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b156137e057565b606460405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152fd5b919060408382031261030c57825167ffffffffffffffff811161030c5783019080601f8301121561030c5781519161385b83610523565b9161386960405193846104c7565b8383526020848301011161030c5760209261388991848085019101611a2d565b92015190565b6040519061389c8261048f565b603a82527f6173746572207369676e61747572652076616c69646174696f6e0000000000006040837f7472616e73616374696f6e20676f7420726576657274656420696e207061796d60208201520152565b906103a2602f60405180947f414133332072657665727465643a2000000000000000000000000000000000006020830152612e1c8151809260208686019101611a2d565b93919260609460009460009380519261396460a08a860151956139568888116137d9565b01516001600160a01b031690565b91613982836001600160a01b03166000526000602052604060002090565b9461399761086c87546001600160701b031690565b96858810613b04576001600160a01b0360208a98946139da8a966001600160701b038b613a139e03166001600160701b03166001600160701b0319825416179055565b015194604051998a98899788937ff465c77e00000000000000000000000000000000000000000000000000000000855260048501612d7d565b0395169103f1908183918493613ade575b50613ac9575050600190613a3661250c565b6308c379a014613a9c575b50613a4857565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601660408201527f4141333320726576657274656420286f72204f4f47290000000000000000000060608201520190565b613aa461252a565b9081613ab05750613a41565b610ca2916130589150613ac4610c6061388f565b6138ee565b929350935050613ada610c6061388f565b9190565b909250613afd91503d8085833e613af581836104c7565b810190613824565b9138613a24565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b919492939093606095600095600093825190613b7f60a08b840151936139568486116137d9565b93613b9d856001600160a01b03166000526000602052604060002090565b613bb161086c82546001600160701b031690565b878110613cd057926001600160a01b0360208a989693946139da8a966001600160701b038d613bf89e9c9a03166001600160701b03166001600160701b0319825416179055565b0395169103f1908183918493613cb2575b50613ca0575050600190613c1b61250c565b6308c379a014613c7b575b50613c2e5750565b60408051631101335b60e11b815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b613c8361252a565b9081613c8f5750613c26565b6132a0925050613ac4610c6061388f565b93945094505050613ada610c6061388f565b909250613cc991503d8085833e613af581836104c7565b9138613c09565b610ca28a604051918291631101335b60e11b835260048301608091815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b60031115613d2f57565b634e487b7160e01b600052602160045260246000fd5b929190613d6360409160028652606060208701526060860190611a50565b930152565b939291906003811015613d2f57604091613d63918652606060208701526060860190611a50565b906103a2603660405180947f4141353020706f73744f702072657665727465643a20000000000000000000006020830152613dd38151809260208686019101611a2d565b81010360168101855201836104c7565b929190925a93600091805191613df883614461565b9260a0810195613e0f87516001600160a01b031690565b6001600160a01b0393908481169081613f3157505050613e3682516001600160a01b031690565b985b5a90030193840297604084019089825110613edd577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94613e826020928c613ed89551039061475d565b015194896020613eaa613e9c86516001600160a01b031690565b9a516001600160a01b031690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152602060408201527f414135312070726566756e642062656c6f772061637475616c476173436f737460608201520190565b9a918051613f41575b5050613e38565b6060850151600099509091803b1561402b579189918983613f7b9560405180978196829563a9a2340960e01b84528c029060048401613d45565b0393f19081614018575b50614013576001613f9461250c565b6308c379a014613ff4575b613fab575b3880613f3a565b604051631101335b60e11b815280610ca2600482016080906000815260406020820152601260408201527110504d4c081c1bdcdd13dc081c995d995c9d60721b60608201520190565b613ffc61252a565b806140075750613f9f565b613058610ca291613d8f565b613fa4565b80610cc96140259261047b565b38613f85565b8980fd5b9392915a9060009280519061404382614461565b9360a083019661405a88516001600160a01b031690565b6001600160a01b039590868116908161411d5750505061408184516001600160a01b031690565b915b5a9003019485029860408301908a8251106140d057507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f949392613e82613ed8938c60209451039061475d565b60408051631101335b60e11b815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b9391805161412d575b5050614083565b606087015160009a509091803b1561421657918a918a836141679560405180978196829563a9a2340960e01b84528c029060048401613d45565b0393f19081614203575b506141fe57600161418061250c565b6308c379a0146141e1575b614197575b3880614126565b610ca28b604051918291631101335b60e11b835260048301608091815260406020820152601260408201527110504d4c081c1bdcdd13dc081c995d995c9d60721b60608201520190565b6141e961252a565b806141f4575061418b565b6132a08d91613d8f565b614190565b80610cc96142109261047b565b38614171565b8a80fd5b909392915a9480519161422c83614461565b9260a081019561424387516001600160a01b031690565b6001600160a01b039381851691826143045750505061426982516001600160a01b031690565b985b5a90030193840297604084019089825110613edd577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f946142b56020928c613ed89551039061475d565b6142be88613d25565b0151948960206142d8613e9c86516001600160a01b031690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151614314575b505061426b565b8784026143208a613d25565b60028a14614392576060860151823b1561030c5761435a93600080948d6040519788968795869363a9a2340960e01b855260048501613d68565b0393f18015614385575b614372575b505b388061430d565b80610cc961437f9261047b565b38614369565b61438d611b1e565b614364565b6060860151823b1561030c576143c493600080948d6040519788968795869363a9a2340960e01b855260048501613d68565b0393f1908161444e575b506144495760016143dd61250c565b6308c379a014614436575b1561436b57604051631101335b60e11b815280610ca2600482016080906000815260406020820152601260408201527110504d4c081c1bdcdd13dc081c995d995c9d60721b60608201520190565b61443e61252a565b8061400757506143e8565b61436b565b80610cc961445b9261047b565b386143ce565b60e060c082015191015180821461448557480180821015614480575090565b905090565b5090565b604051906144968261048f565b60006040838281528260208201520152565b6144b0614489565b5065ffffffffffff808260a01c1680156144ef575b604051926144d28461048f565b6001600160a01b038116845260d01c602084015216604082015290565b50806144c5565b61450b61451191614505614489565b506144a8565b916144a8565b906001600160a01b039182825116928315614590575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410614588575b50808511614580575b506040519561456e8761048f565b16855216602084015216604082015290565b935038614560565b925038614557565b815181169350614527565b906147019061469467ffffffffffffffff8260401c926145f0816040516145c1816104ab565b600981527f6e6f6e63653a20257300000000000000000000000000000000000000000000006020820152614d1b565b61462f84604051614600816104ab565b600781527f6b65793a202573000000000000000000000000000000000000000000000000006020820152614d1b565b169361467085604051614641816104ab565b600781527f7365713a202573000000000000000000000000000000000000000000000000006020820152614d1b565b6146e86146ac84614694846001600160a01b03166000526001602052604060002090565b906001600160c01b0316600052602052604060002090565b546040516146b9816104ab565b601781527f6e6f6e636553657175656e63654e756d6265723a2025730000000000000000006020820152614d1b565b6001600160a01b03166000526001602052604060002090565b80549061470d82611d7d565b90551490565b906001600160a01b03614724612309565b9216600052600060205263ffffffff600160406000206001600160701b03815460781c1685520154166020830152565b6103a233614801565b6001600160a01b0316600052600060205260406000206001600160701b03808254169283018093116147f4575b8083116147b0576103a292166001600160701b03166001600160701b0319825416179055565b606460405162461bcd60e51b815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152fd5b6147fc611b2b565b61478a565b6001600160a01b0390614814348261475d565b168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206001600160701b0360406000205416604051908152a2565b1561486057565b606460405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b156148ab57565b606460405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b156148f657565b606460405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b1561494157565b606460405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b9065ffffffffffff608060016103a2946149bf6001600160701b0386511682906001600160701b03166001600160701b0319825416179055565b602085015115156eff000000000000000000000000000082549160701b16806eff00000000000000000000000000001983161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff60608201511663ffffffff1985541617845501511669ffffffffffff0000000082549160201b169069ffffffffffff000000001916179055565b15614a8a57565b606460405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b91909165ffffffffffff80809416911601918211611b4f57565b15614aef57565b606460405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b15614b3a57565b606460405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b15614b8557565b606460405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b15614bd057565b606460405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b15614c1b57565b606460405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b816040519182372090565b9060009283809360208451940192f190565b3d610800808211614ca3575b50604051906020818301016040528082526000602083013e90565b905038614c88565b614cf2614d006103a2926040519283917f41304fac000000000000000000000000000000000000000000000000000000006020840152602060248401526044830190611a50565b03601f1981018352826104c7565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b614d00614d63916103a2936040519384927fb60e72cc000000000000000000000000000000000000000000000000000000006020850152604060248501526064840190611a50565b90604483015203601f1981018352826104c756fea26469706673582212206d8d12e5ea2bbaf2ab4bf7646353ec6d38a00e440564f9fb0a64ab64addb8eea64736f6c6343000811003360808060405234610016576101b6908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100ab5760203660031901126100ab5760043567ffffffffffffffff918282116100ab57366023830112156100ab5781600401359283116100ab5736602484840101116100ab576100a761008084602485016100de565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90806014116101615767ffffffffffffffff916013198201838111610173575b60405193600b8401601f19908116603f0116850190811185821017610166575b60405280845260208401903684840111610161576020946000600c819682946014880187378301015251923560601c5af190600051911561015b57565b60009150565b600080fd5b61016e6100ae565b61011e565b61017b6100ae565b6100fe56fea264697066735822122093cadc705c6e9902fa1e6be2251446df1434187176714a3fc41d23cd35ec39b064736f6c63430008110033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DefaultCallbackHandler,
  DefaultCallbackHandlerInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/handler/DefaultCallbackHandler";

const _abi = [
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610549908161001c8239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c90816223de291461039a57816301ffc9a7146102df57508063150b7a0214610288578063a3f4df7e14610221578063bc197c811461017e578063f23a6e611461010b5763ffa1ad741461007157600080fd5b346101075781600319360112610107578051918183019083821067ffffffffffffffff8311176100db57506100d793508152600582527f312e302e3000000000000000000000000000000000000000000000000000000060208301525191829182610499565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b5080fd5b50903461017b5760a036600319011261017b57610126610420565b5061012f610448565b506084359067ffffffffffffffff821161017b57506020926101539136910161046b565b5050517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b80fd5b50903461017b5760a036600319011261017b57610199610420565b506101a2610448565b5067ffffffffffffffff90604435828111610107576101c490369086016104e2565b5050606435828111610107576101dd90369086016104e2565b505060843591821161017b57506020926101f99136910161046b565b5050517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b50346101075781600319360112610107578051918183019083821067ffffffffffffffff8311176100db57506100d793508152601882527f44656661756c742043616c6c6261636b2048616e646c6572000000000000000060208301525191829182610499565b50903461017b57608036600319011261017b576102a3610420565b506102ac610448565b506064359067ffffffffffffffff821161017b57506020926102d09136910161046b565b505051630a85bd0160e11b8152f35b8390853461039657602036600319011261039657357fffffffff00000000000000000000000000000000000000000000000000000000811680910361039657602092507f4e2312e0000000000000000000000000000000000000000000000000000000008114908115610385575b811561035b575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610354565b630a85bd0160e11b8114915061034d565b8280fd5b8385346101075760c0366003190112610107576103b5610420565b506103be610448565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036101075767ffffffffffffffff9060843582811161041c576103ff903690830161046b565b505060a435918211610396576104179136910161046b565b505080f35b8380fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361044357565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361044357565b9181601f840112156104435782359167ffffffffffffffff8311610443576020838186019501011161044357565b6020808252825181830181905290939260005b8281106104ce57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016104ac565b9181601f840112156104435782359167ffffffffffffffff8311610443576020808501948460051b0101116104435756fea26469706673582212204163ae0b23fa87eda2caa33067a8f37ae8776237de4febca5ded1a8884b5a1d164736f6c63430008110033";

type DefaultCallbackHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefaultCallbackHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefaultCallbackHandler__factory extends ContractFactory {
  constructor(...args: DefaultCallbackHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DefaultCallbackHandler> {
    return super.deploy(overrides || {}) as Promise<DefaultCallbackHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DefaultCallbackHandler {
    return super.attach(address) as DefaultCallbackHandler;
  }
  override connect(signer: Signer): DefaultCallbackHandler__factory {
    return super.connect(signer) as DefaultCallbackHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefaultCallbackHandlerInterface {
    return new utils.Interface(_abi) as DefaultCallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefaultCallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DefaultCallbackHandler;
  }
}

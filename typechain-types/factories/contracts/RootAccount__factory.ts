/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RootAccount,
  RootAccountInterface,
} from "../../contracts/RootAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RootAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acta_treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0346200019757601f620025e238819003918201601f19168301916001600160401b038311848410176200019c578084926020946040528339810103126200019757516001600160a01b038116810362000197573060805260a0526000805462010000600160b01b031981163360101b62010000600160b01b031690811792839055909160081c60ff16620001425760ff80831603620000fc575b60405161242f9081620001b382396080518181816104db01528181610a980152610c17015260a0518181816106e5015281816107ed015281816108ab01528181610dea01528181610f7a015281816111250152818161180c015261185e0152f35b60ff9161ff01600160b01b03191617176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138806200009b565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806223de29146101c957806301ffc9a7146101c0578063150b7a02146101b757806318dfb3c7146101ae5780633659cfe6146101a55780633a871cdd1461019c578063400bbc09146101665780634a58db19146101935780634d44560d1461018a5780634f1ef2861461018157806352d1902d146101785780635a627dbc1461016f57806361d027b3146101665780638da5cb5b1461015d578063b0d691fe14610154578063b61d27f61461014b578063bc197c8114610142578063c399ec8814610139578063c4d66de814610130578063d087d28814610127578063f0f442601461011e5763f23a6e610361000e576101196111dd565b61000e565b50610119611193565b506101196110cd565b50610119610fdf565b50610119610f2b565b50610119610e81565b50610119610e0e565b50610119610dc9565b50610119610d9e565b506101196107ad565b50610119610cd2565b50610119610bfb565b50610119610a52565b50610119610877565b506101196107d5565b50610119610663565b506101196104b1565b506101196103ca565b5061011961033e565b50610119610284565b50610119610216565b6001600160a01b038116036101e357565b600080fd5b9181601f840112156101e35782359167ffffffffffffffff83116101e357602083818601950101116101e357565b50346101e35760c03660031901126101e3576102336004356101d2565b61023e6024356101d2565b6102496044356101d2565b67ffffffffffffffff6084358181116101e35761026a9036906004016101e8565b505060a4359081116101e3576100199036906004016101e8565b50346101e35760203660031901126101e3576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101e35780630a85bd0160e11b60209214908115610314575b81156102ea575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102df565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102d8565b50346101e35760803660031901126101e35761035b6004356101d2565b6103666024356101d2565b60643567ffffffffffffffff81116101e3576103869036906004016101e8565b50506020604051630a85bd0160e11b8152f35b9181601f840112156101e35782359167ffffffffffffffff83116101e3576020808501948460051b0101116101e357565b50346101e35760403660031901126101e35767ffffffffffffffff6004358181116101e3576103fd903690600401610399565b90916024359081116101e357610417903690600401610399565b90610420611853565b81830361046d5760005b83811061043357005b806104636104486104689360051b88016116d5565b61045d610456848888611712565b36916109fd565b906118e5565b6116b0565b61042a565b606460405162461bcd60e51b815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b50346101e35760203660031901126101e3576004356104cf816101d2565b6001600160a01b0390817f000000000000000000000000000000000000000000000000000000000000000016916105088330141561126d565b6105377f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9382855416146112de565b61053f611905565b6040519061054c8261095c565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561058657505061001991506113c0565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610633575b506106205760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b0390fd5b6100199361062e911461134f565b61147a565b61065591925060203d811161065c575b61064d81836109b0565b810190611251565b90386105ac565b503d610643565b50346101e3576003196060368201126101e3576004359067ffffffffffffffff82116101e357610160826004019183360301126101e3576024356106db6040516106ac81610978565b601581527f696e736964652076616c6964617465557365724f70000000000000000000000060208201526122f1565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361075e57604161071e61014461074c9501846116df565b905014600014610750576107319161198c565b61073c604435611971565b6040519081529081906020820190565b0390f35b61075991611e96565b610731565b606460405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b60009103126101e357565b50346101e35760003660031901126101e35760206001600160a01b0360015416604051908152f35b50600080600319360112610874576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681813b1561087457602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af18015610867575b61085b575080f35b6108649061093b565b80f35b61086f611260565b610853565b80fd5b50346101e3576000604036600319011261087457600435610897816101d2565b61089f611905565b816001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001692833b15610920576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af180156108675761085b575080f35b8280fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161094f57604052565b610957610924565b604052565b6020810190811067ffffffffffffffff82111761094f57604052565b6040810190811067ffffffffffffffff82111761094f57604052565b6060810190811067ffffffffffffffff82111761094f57604052565b90601f8019910116810190811067ffffffffffffffff82111761094f57604052565b60209067ffffffffffffffff81116109f0575b601f01601f19160190565b6109f8610924565b6109e5565b929192610a09826109d2565b91610a1760405193846109b0565b8294818452818301116101e3578281602093846000960137010152565b9080601f830112156101e357816020610a4f933591016109fd565b90565b5060403660031901126101e357600435610a6b816101d2565b60243567ffffffffffffffff81116101e357610a8b903690600401610a34565b906001600160a01b0391827f00000000000000000000000000000000000000000000000000000000000000001692610ac58430141561126d565b610af47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9482865416146112de565b610afc611905565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b3257505061001991506113c0565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610bdb575b50610bc85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b61001993610bd6911461134f565b61154c565b610bf491925060203d811161065c5761064d81836109b0565b9038610b58565b50346101e35760003660031901126101e3576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c68576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b608460405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b50600080600319360112610874576001600160a01b03600154168015610d5a5781813b1561087457600491604051928380927f5a627dbc00000000000000000000000000000000000000000000000000000000825234905af18015610d4d575b610d3a575080f35b80610d476108649261093b565b806107a2565b610d55611260565b610d32565b606460405162461bcd60e51b815260206004820152601560248201527f4e6f2074726561737572792073706563696669656400000000000000000000006044820152fd5b50346101e35760003660031901126101e35760206001600160a01b0360005460101c16604051908152f35b50346101e35760003660031901126101e35760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101e35760603660031901126101e357600435610e2c816101d2565b60443567ffffffffffffffff81116101e357600091610e5b610e53849336906004016101e8565b610456611853565b9060208251920190602435905af1610e7161159f565b9015610e7957005b602081519101fd5b50346101e35760a03660031901126101e357610e9e6004356101d2565b610ea96024356101d2565b67ffffffffffffffff6044358181116101e357610eca903690600401610399565b50506064358181116101e357610ee4903690600401610399565b50506084359081116101e357610efe9036906004016101e8565b50506040517fbc197c81000000000000000000000000000000000000000000000000000000008152602090f35b50346101e35760003660031901126101e35760206040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fd2575b600091610fb5575b50604051908152f35b610fcc9150823d811161065c5761064d81836109b0565b38610fac565b610fda611260565b610fa4565b50346101e35760203660031901126101e357600435610ffd816101d2565b6110416000549161102560ff8460081c1615809481956110bf575b811561109f575b50611743565b82611038600160ff196000541617600055565b611086576117b4565b61104757005b61105761ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61109a61010061ff00196000541617600055565b6117b4565b303b159150816110b1575b503861101f565b6001915060ff1614386110aa565b600160ff8216109150611018565b50346101e35760003660031901126101e35761074c6040517f35567e1a000000000000000000000000000000000000000000000000000000008152306004820152600060248201526020816044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115611186575b600091611168575b506040519081529081906020820190565b611180915060203d811161065c5761064d81836109b0565b38611157565b61118e611260565b61114f565b50346101e35760203660031901126101e3576001600160a01b036004356111b9816101d2565b1673ffffffffffffffffffffffffffffffffffffffff196001541617600155600080f35b50346101e35760a03660031901126101e3576111fa6004356101d2565b6112056024356101d2565b60843567ffffffffffffffff81116101e3576112259036906004016101e8565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b908160209103126101e3575190565b506040513d6000823e3d90fd5b1561127457565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b156112e557565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b1561135657565b608460405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b803b15611410576001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc911673ffffffffffffffffffffffffffffffffffffffff19825416179055565b608460405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b90611484826113c0565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2805115801590611544575b6114c6575050565b61154191600080604051936114da85610994565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af461153b61159f565b916115cf565b50565b5060006114be565b90611556826113c0565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2805115801590611597576114c6575050565b5060016114be565b3d156115ca573d906115b0826109d2565b916115be60405193846109b0565b82523d6000602084013e565b606090565b9192901561163057508151156115e3575090565b3b156115ec5790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156116435750805190602001fd5b61061c9060405191829162461bcd60e51b83526004830161169f565b919082519283825260005b84811061168b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161166a565b906020610a4f92818152019061165f565b60001981146116bf5760010190565b634e487b7160e01b600052601160045260246000fd5b35610a4f816101d2565b903590601e19813603018212156101e3570180359067ffffffffffffffff82116101e3576020019181360383136101e357565b9082101561172d576117299160051b8101906116df565b9091565b634e487b7160e01b600052603260045260246000fd5b1561174a57565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b16911617806000556001600160a01b03809160101c16907f0000000000000000000000000000000000000000000000000000000000000000167f0b8dee18aa20d532c0ff1f77196feb361526ce4f310bb3fe7d4aae6a1a61b36c600080a3565b6001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001633149081156118d4575b501561189057565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c16331438611888565b600091829182602083519301915af16118fc61159f565b9015610e795750565b6001600160a01b0360005460101c1633148015611968575b1561192457565b606460405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b5030331461191d565b806119795750565b600080808093338219f15061154161159f565b906119c0907f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b6119f76119ef6001600160a01b03926119e96104568560005460101c16966101408101906116df565b90611b6f565b919091611a34565b1603611a0257600090565b600190565b610a4f916119ef91611b6f565b60051115611a1e57565b634e487b7160e01b600052602160045260246000fd5b611a3d81611a14565b80611a455750565b611a4e81611a14565b60018103611a9b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611aa481611a14565b60028103611af15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611afd600392611a14565b14611b0457565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b906041815114600014611b9957611729916020820151906060604084015193015160001a90611ba3565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611c275791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611c1a575b81516001600160a01b03811615611c14579190565b50600190565b611c22611260565b611bff565b50505050600090600390565b60405190611c4082610978565b601a82527f766572696679696e67206d65726b6c65207369676e61747572650000000000006020830152565b60405190611c7982610978565b600a82527f73656e6465723a202573000000000000000000000000000000000000000000006020830152565b359065ffffffffffff821682036101e357565b9060a0828203126101e357611ccc82611ca5565b92602090611cdb828501611ca5565b9360408101359367ffffffffffffffff9360608301358581116101e35783019082601f830112156101e357813591868311611d6c575b8260051b60405193611d25848301866109b0565b84528280850191830101918583116101e3578301905b828210611d5d57505050509360808301359081116101e357610a4f9201610a34565b81358152908301908301611d3b565b611d74610924565b611d11565b60405190611d8682610978565b600e82527f76616c6964556e74696c3a2025730000000000000000000000000000000000006020830152565b60405190611dbf82610978565b600e82527f76616c696441667465723a2025730000000000000000000000000000000000006020830152565b60405190611df882610978565b600782527f4e6f773a202573000000000000000000000000000000000000000000000000006020830152565b60405190611e3182610978565b601382527f696e76616c6964206d65726b6c652074726565000000000000000000000000006020830152565b60405190611e6a82610978565b601782527f766572696679696e6720746865207369676e61747572650000000000000000006020830152565b611eca611ed291611ead611ea8611c33565b6122f1565b611ebf8135611eba611c6c565b612394565b6101408101906116df565b810190611cb8565b611edf869392949661228f565b611f9c611f98611eed611d79565b95848865ffffffffffff97611f05898316809b612338565b611f1a8c8a611f12611db2565b911690612338565b611f2b42611f26611deb565b612338565b6040517fffffffffffff000000000000000000000000000000000000000000000000000060d093841b811660208301908152938e901b166026820152602c810191909152611f8681604c81015b03601f1981018352826109b0565b51902091611f938361228f565b61206c565b1590565b61201c57611fb491611faf611ea8611e5d565b612138565b156120135779ffffffffffff0000000000000000000000000000000000000000927fffffffffffff00000000000000000000000000000000000000000000000000009261200b5750925b60d01b169160a01b161790565b905092611ffe565b50505050600190565b612027611ea8611e24565b60405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420557365724f700000000000000000000000000000000000006044820152606490fd5b9091906000915b81518310156120bf576020808460051b840101519160008382106000146120ae5750600052526120a860406000205b926116b0565b91612073565b906040926120a894835252206120a2565b9150501490565b604051906120d382610978565b601282527f65787065637465645369676e65723a20257300000000000000000000000000006020830152565b6040519061210c82610978565b600d82527f7265636f76657265643a202573000000000000000000000000000000000000006020830152565b60005460101c6001600160a01b03169061215482611eba6120c6565b6001600160a01b038092169283156122245760418151106121df57826121ac826121a7857f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b611a07565b6121b881611eba6120ff565b168414612013576121c891611a07565b6121d481611eba6120ff565b1614611a0257600090565b60405162461bcd60e51b815260206004820181905260248201527f4572726f723a20496e76616c6964207369676e6174757265206c656e677468216044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f4572726f723a204163636f756e74206d757374206861766520616e206f776e6560448201527f72210000000000000000000000000000000000000000000000000000000000006064820152608490fd5b6122d490604051907f27b7cf850000000000000000000000000000000000000000000000000000000060208301526024820152602481526122cf81610994565b6122d6565b565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b611f786122cf6122d4926040519283917f41304fac00000000000000000000000000000000000000000000000000000000602084015260206024840152604483019061165f565b6122cf612380916122d4936040519384927fb60e72cc00000000000000000000000000000000000000000000000000000000602085015260406024850152606484019061165f565b90604483015203601f1981018352826109b0565b6122cf6123e4916122d4936001600160a01b036040519485937f319af33300000000000000000000000000000000000000000000000000000000602086015260406024860152606485019061165f565b9116604483015203601f1981018352826109b056fea2646970667358221220dbee92405a92d85b6aeeb46723d8f98f478b412dc2fa7807adde48fd3b9dc6bb64736f6c63430008110033";

type RootAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootAccount__factory extends ContractFactory {
  constructor(...args: RootAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootAccount> {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<RootAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): RootAccount {
    return super.attach(address) as RootAccount;
  }
  override connect(signer: Signer): RootAccount__factory {
    return super.connect(signer) as RootAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootAccountInterface {
    return new utils.Interface(_abi) as RootAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootAccount {
    return new Contract(address, _abi, signerOrProvider) as RootAccount;
  }
}

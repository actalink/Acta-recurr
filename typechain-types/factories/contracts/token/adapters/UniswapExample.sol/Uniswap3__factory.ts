/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Uniswap3,
  Uniswap3Interface,
} from "../../../../../contracts/token/adapters/UniswapExample.sol/Uniswap3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "daiAmount",
        type: "uint256",
      },
    ],
    name: "convertEthToExactDai",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "convertExactEthToDai",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "daiAmount",
        type: "uint256",
      },
    ],
    name: "getEstimatedETHforDAI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "quoter",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761075b908161001c8239f35b600080fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c90816341d53ee914610404578163735de9f7146103d55781637ed3717f14610182578163ada8b83d14610091575063c6bbd5a703610011573461008d578160031936011261008d576020905173b27308f9f90d607463bb33ea1bebb41c27ce5ab68152f35b5080fd5b83836020928360031936011261017e578151907f30d07f2100000000000000000000000000000000000000000000000000000000825273d0a1e359811322d97991e03f863a0c30c2cf029c81830152734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa6024830152610bb86044830152356064820152826084820152838160a4818673b27308f9f90d607463bb33ea1bebb41c27ce5ab65af1928315610173579261013f575b5051908152f35b9091508281813d831161016c575b6101578183610678565b8101031261016757519083610138565b600080fd5b503d61014d565b8251903d90823e3d90fd5b8280fd5b836020843660031901821361017e578335918215610393576101a53415156105e6565b600f42019283421161038057908495918351946101c186610631565b73d0a1e359811322d97991e03f863a0c30c2cf029c8652734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa83870152610bb885870152336060870152608086015260a08501523460c08501528460e08501526102ae8351947fdb3e21980000000000000000000000000000000000000000000000000000000086528386019060e0908173ffffffffffffffffffffffffffffffffffffffff9182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b73e592427a0aece92de3edee1f18e0157c058615649381816101048134895af1801561037657610347575b5050823b156103425783928391835180958193630910874560e11b83525af19081156103395750610322575b5080808061031f9347335af161031961069a565b506106da565b80f35b61032b90610664565b610336578082610305565b80fd5b513d84823e3d90fd5b505050fd5b90809295503d831161036f575b61035e8183610678565b8101031261016757839285806102d9565b503d610354565b84513d88823e3d90fd5b602485601188634e487b7160e01b835252fd5b8490606492519162461bcd60e51b8352820152601a60248201527f4d7573742070617373206e6f6e20302044414920616d6f756e740000000000006044820152fd5b50503461008d578160031936011261008d576020905173e592427a0aece92de3edee1f18e0157c058615648152f35b83838160031936011261008d5761041c3415156105e6565b600f42018042116105d35792829382519061043682610631565b73d0a1e359811322d97991e03f863a0c30c2cf029c8252734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa6020830152610bb88483015233606083015260808201523460a0820152600160c08201528360e08201526105268351917f414bf3890000000000000000000000000000000000000000000000000000000083528383019060e0908173ffffffffffffffffffffffffffffffffffffffff9182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b73e592427a0aece92de3edee1f18e0157c05861564906020816101048134865af180156105c95761059e575b50803b15610342578391835180958193630910874560e11b83525af1908115610339575061058f575b5061031f8180808047335af161031961069a565b61059890610664565b8161057b565b602090813d81116105c2575b6105b48183610678565b810103126103425785610552565b503d6105aa565b84513d87823e3d90fd5b602483601186634e487b7160e01b835252fd5b156105ed57565b606460405162461bcd60e51b815260206004820152601a60248201527f4d7573742070617373206e6f6e20302045544820616d6f756e740000000000006044820152fd5b610100810190811067ffffffffffffffff82111761064e57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161064e57604052565b90601f8019910116810190811067ffffffffffffffff82111761064e57604052565b3d156106d5573d9067ffffffffffffffff821161064e57604051916106c9601f8201601f191660200184610678565b82523d6000602084013e565b606090565b156106e157565b606460405162461bcd60e51b815260206004820152600d60248201527f726566756e64206661696c6564000000000000000000000000000000000000006044820152fdfea2646970667358221220e67daa0a6f1e3c3b6bf9f6110b7d925061cb0d88b50bb0707632910c234d8a3164736f6c63430008110033";

type Uniswap3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uniswap3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uniswap3__factory extends ContractFactory {
  constructor(...args: Uniswap3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Uniswap3> {
    return super.deploy(overrides || {}) as Promise<Uniswap3>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Uniswap3 {
    return super.attach(address) as Uniswap3;
  }
  override connect(signer: Signer): Uniswap3__factory {
    return super.connect(signer) as Uniswap3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uniswap3Interface {
    return new utils.Interface(_abi) as Uniswap3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uniswap3 {
    return new Contract(address, _abi, signerOrProvider) as Uniswap3;
  }
}

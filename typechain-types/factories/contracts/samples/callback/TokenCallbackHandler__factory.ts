/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenCallbackHandler,
  TokenCallbackHandlerInterface,
} from "../../../../contracts/samples/callback/TokenCallbackHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576103e3908161001c8239f35b600080fdfe60808060405260048036101561001457600080fd5b600091823560e01c90816223de291461028157816301ffc9a7146101ca57508063150b7a0214610174578063bc197c81146100ce5763f23a6e611461005857600080fd5b346100ca5760a03660031901126100ca57610071610303565b5061007a61032b565b5060843567ffffffffffffffff81116100c65761009a925036910161034e565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b8280fd5b5080fd5b50346100ca5760a03660031901126100ca576100e8610303565b506100f161032b565b5067ffffffffffffffff60443581811161017057610112903690840161037c565b50506064358181116101705761012b903690840161037c565b50506084359081116100c657610144925036910161034e565b505060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b8380fd5b50346100ca5760803660031901126100ca5761018e610303565b5061019761032b565b5060643567ffffffffffffffff81116100c6576101b7925036910161034e565b50506020604051630a85bd0160e11b8152f35b919050346100c65760203660031901126100c657357fffffffff0000000000000000000000000000000000000000000000000000000081168091036100c65760209250630a85bd0160e11b8114908115610257575b811561022d575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610226565b7f4e2312e0000000000000000000000000000000000000000000000000000000008114915061021f565b5050346100ca5760c03660031901126100ca5761029c610303565b506102a561032b565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036100ca5767ffffffffffffffff90608435828111610170576102e6903690830161034e565b505060a4359182116100c6576102fe9136910161034e565b505080f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361032657565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361032657565b9181601f840112156103265782359167ffffffffffffffff8311610326576020838186019501011161032657565b9181601f840112156103265782359167ffffffffffffffff8311610326576020808501948460051b0101116103265756fea2646970667358221220c0c64a9a5da41d73ed0f81131e6cfef8afe4a29f82ea482b39b37f0a7dc85cfa64736f6c63430008110033";

type TokenCallbackHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenCallbackHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenCallbackHandler__factory extends ContractFactory {
  constructor(...args: TokenCallbackHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenCallbackHandler> {
    return super.deploy(overrides || {}) as Promise<TokenCallbackHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenCallbackHandler {
    return super.attach(address) as TokenCallbackHandler;
  }
  override connect(signer: Signer): TokenCallbackHandler__factory {
    return super.connect(signer) as TokenCallbackHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenCallbackHandlerInterface {
    return new utils.Interface(_abi) as TokenCallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenCallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenCallbackHandler;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DepositPaymaster,
  DepositPaymasterInterface,
} from "../../../contracts/samples/DepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ea57601f61166d38819003918201601f19168301916001600160401b038311848410176100ef578084926020946040528339810103126100ea57516001600160a01b039081811681036100ea5760008054336001600160a01b0319821681178355604051949293929091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a3608052338152600360205260404391205561156790816101068239608051818181610643015281816108880152818161097b01528181610a0e01528181610a9301528181610f7c0152818161102301526111fb0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630396cb6014610ff1578063205c287814610f4d578063382edd9e14610e81578063493b017014610e225780634a6f84cf14610dec5780635476bd7214610d30578063715018a614610cc9578063796d437114610cad5780638da5cb5b14610c885780639ed0fb6814610c67578063a9a2340914610af0578063addd509914610ab7578063b0d691fe14610a74578063bb9fe6bf146109e8578063c23a5cea1461094b578063c23f001f14610900578063c399ec881461083c578063cc9c837c146106fe578063cd8f80c2146106d5578063d0e30db01461062a578063f2fde38b146105405763f465c77e1461011357600080fd5b3461053c57600319906060368301126105385783359167ffffffffffffffff948584116105345783810193610160813603938401126105305760449283359161015a6111f1565b6188b860a482013511156104c85761012481013591602219018212156104c4570192828401358881116104c45760249481360386820113610459576028820361045d578160141161045957603801356bffffffffffffffffffffffff19808216916014601319850110610442575b5050905060601c6001600160a01b03968781351690828a5260209860018a52888b20541680156103dc57908988959493928a51968780927fd1eca9cf0000000000000000000000000000000000000000000000000000000082528a8c8301525afa9485156103d2578b9561039c575b5061024190611508565b92818b5260038a52888b205461033757828b5260028a52888b20826000528a52848960002054106102d15750875198890152868801526060870152608086015260a085015260a0845260c0840195848710908711176102be57505083815283526102af61010082018261110d565b9160e082015260bf1991030190f35b604190634e487b7160e01b600052526000fd5b867f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60849260218b8e8e519562461bcd60e51b87528601528401528201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b867f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f6084928a8d8d519462461bcd60e51b8652850152808401528201527f636b6564000000000000000000000000000000000000000000000000000000006064820152fd5b9094508981813d83116103cb575b6103b481836111cf565b810103126103c6575193610241610237565b600080fd5b503d6103aa565b89513d8d823e3d90fd5b6084877f4465706f7369745061796d61737465723a20756e737570706f7274656420746f8760238c8f8f519562461bcd60e51b87528601528401528201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152fd5b91506014819381030160031b1b16168038806101c8565b8880fd5b6084857f4465706f7369745061796d61737465723a207061796d6173746572416e6444618560358a60208d519562461bcd60e51b87528601528401528201527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152fd5b8780fd5b6084847f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f8760208a519362461bcd60e51b8552840152602860248401528201527f7220706f73744f700000000000000000000000000000000000000000000000006064820152fd5b8580fd5b8480fd5b8280fd5b5080fd5b5082346105385760203660031901126105385761055b611098565b9061056461114d565b6001600160a01b038092169283156105c15750506000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b50918192826003193601126106d1576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b156106cc57839060248351809581937fb760faf9000000000000000000000000000000000000000000000000000000008352309083015234905af19081156106c357506106b05750f35b6106b9906111a5565b6106c05780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b82346106c057806003193601126106c0576106fb33600052600360205260006040812055565b80f35b503461053c5761070d366110d8565b929092338552600360205281852054151580610830575b156107c7576001600160a01b038084168652600260205282862033600052602052826000206107548382546114fb565b90558251947fa9059cbb000000000000000000000000000000000000000000000000000000006020870152166024850152604484015260448352608083019083821067ffffffffffffffff8311176107b2576106fb949550526112fb565b604186634e487b7160e01b6000525260246000fd5b608486602084519162461bcd60e51b8352820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152fd5b50818520544311610724565b503461053c578160031936011261053c578051927f70a0823100000000000000000000000000000000000000000000000000000000845230908401526020836024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9182156108f557916108c1575b6020925051908152f35b90506020823d82116108ed575b816108db602093836111cf565b810103126103c65760209151906108b7565b3d91506108ce565b9051903d90823e3d90fd5b503461053c578060031936011261053c5760209161091c611098565b826109256110c2565b926001600160a01b03809316815260028652209116600052825280600020549051908152f35b50918192346106d15760203660031901126106d157610968611098565b61097061114d565b6001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803b1561053057859283602492865197889586947fc23a5cea00000000000000000000000000000000000000000000000000000000865216908401525af19081156106c357506106b05750f35b50918192346106d157826003193601126106d157610a0461114d565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b156106cc57839283918351809581937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af19081156106c357506106b05750f35b503461053c578160031936011261053c57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461053c57602036600319011261053c57602091816001600160a01b039182610adf611098565b168152600185522054169051908152f35b503461053c57606036600319011261053c57823592600384101561053857602480359067ffffffffffffffff808311610530573660238401121561053057828401359081116105305782013682820111610530578260a091610b506111f1565b031261053457610b618183016110ae565b92610b6e604484016110ae565b9260648101359260a46084830135920135926001600160a01b03809716946188b89080820291820403610c5557610ba790604435611267565b838102938185041490151715610c42578315610c315750500493610c0193909290918291908660028a14610c0657610be19130908461128a565b168552600260205281852090855416600052602052600020918254611267565b905580f35b50828216885260026020528488209060005260205283600020610c2a8782546114fb565b9055610be1565b60128991634e487b7160e01b835252fd5b601190634e487b7160e01b600052526000fd5b5060118991634e487b7160e01b835252fd5b503461053c578160031936011261053c573382526003602052439082205580f35b503461053c578160031936011261053c576001600160a01b0360209254169051908152f35b503461053c578160031936011261053c57602090516188b88152f35b82346106c057806003193601126106c057610ce261114d565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50829034610538578060031936011261053857610d4b611098565b602435926001600160a01b0391828516809503610530578290610d6c61114d565b169182865260016020528386205416610da957508352600160205282209073ffffffffffffffffffffffffffffffffffffffff1982541617905580f35b606490602084519162461bcd60e51b8352820152601160248201527f546f6b656e20616c7265616479207365740000000000000000000000000000006044820152fd5b503461053c57602036600319011261053c57806020926001600160a01b03610e12611098565b1681526003845220549051908152f35b5090346106c057816003193601126106c05781610e3d611098565b91610e466110c2565b926001600160a01b03809116825260026020528282209316928360005260205281600020549281526003602052205482519182526020820152f35b5082903461053857610e92366110d8565b929190936001600160a01b039182811691828852600160205283858920541615610f0a575090610ecb85610eea9594933090339061128a565b8652600260205281862094169384600052602052600020918254611267565b90553314610ef55780f35b6106fb33600052600360205260006040812055565b606490602086519162461bcd60e51b8352820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152fd5b50918192346106d157806003193601126106d157610f69611098565b610f7161114d565b6001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803b1561053057859283604492865197889586947f205c2878000000000000000000000000000000000000000000000000000000008652169084015260243560248401525af19081156106c357506106b05750f35b50829060203660031901126105385782823563ffffffff811680910361053c5761101961114d565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693843b1561053857602490845195869384927f0396cb6000000000000000000000000000000000000000000000000000000000845283015234905af19081156106c3575061108f575080f35b6106fb906111a5565b600435906001600160a01b03821682036103c657565b35906001600160a01b03821682036103c657565b602435906001600160a01b03821682036103c657565b60609060031901126103c6576001600160a01b039060043582811681036103c6579160243590811681036103c6579060443590565b919082519283825260005b848110611139575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611118565b6001600160a01b0360005416330361116157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116111b957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176111b957604052565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361122357565b606460405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152fd5b9190820180921161127457565b634e487b7160e01b600052601160045260246000fd5b9290604051927f23b872dd0000000000000000000000000000000000000000000000000000000060208501526001600160a01b03809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176111b9576112f9926040526112fb565b565b6001600160a01b0316906040516040810167ffffffffffffffff90828110828211176111b9576040526020938483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858401526000808587829751910182855af1903d15611454573d92831161144057906113979392916040519261138a88601f19601f84011601856111cf565b83523d868885013e61145f565b80519182159184831561141c575b5050509050156113b25750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b91938180945001031261053c578201519081151582036106c05750803880846113a5565b602485634e487b7160e01b81526041600452fd5b906113979392506060915b919290156114c05750815115611473575090565b3b1561147c5790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156114d35750805190602001fd5b6114f79060405191829162461bcd60e51b835260206004840152602483019061110d565b0390fd5b9190820391821161127457565b61010060e082013591013580821461152d57480180821015611528575090565b905090565b509056fea2646970667358221220ca226bda90d258fc56300c0d2f053989d9005b3987f3daefe9c39eac0a1f828564736f6c63430008110033";

type DepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPaymaster__factory extends ContractFactory {
  constructor(...args: DepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<DepositPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): DepositPaymaster {
    return super.attach(address) as DepositPaymaster;
  }
  override connect(signer: Signer): DepositPaymaster__factory {
    return super.connect(signer) as DepositPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPaymasterInterface {
    return new utils.Interface(_abi) as DepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPaymaster {
    return new Contract(address, _abi, signerOrProvider) as DepositPaymaster;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestHelpers,
  TestHelpersInterface,
} from "../../../contracts/test/TestHelpers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paymasterValidationData",
        type: "uint256",
      },
    ],
    name: "intersectTimeRange",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
        ],
        internalType: "struct ValidationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "sigFailed",
        type: "bool",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "packValidationData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
        ],
        internalType: "struct ValidationData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "packValidationDataStruct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    name: "parseValidationData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
        ],
        internalType: "struct ValidationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610411908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c806324d3cde6146102645780634fe5f5cf1461016d578063a4b2282e146101055763b059e2fa1461004b57600080fd5b34610101576060366003190112610101576004359081151582036100fd5791602092610075610345565b9161007e61035f565b93156100c9575060ff65ffffffffffff60a01b7fffffffffffff00000000000000000000000000000000000000000000000000006001935b519560d01b169360a01b16911617178152f35b65ffffffffffff60a01b7fffffffffffff000000000000000000000000000000000000000000000000000060ff92936100b6565b8280fd5b5080fd5b50346101015760203660031901126101015761016990610123610374565b5061012f600435610391565b905191829182919091604060608201936001600160a01b0381511683528165ffffffffffff91826020820151166020860152015116910152565b0390f35b50346101015780600319360112610101576101699061018a610374565b50610193610374565b5061019f600435610391565b906101ab602435610391565b916001600160a01b039283825116938415610259575b65ffffffffffff92839182868160208501511693015116938387816020840151169201511690808410610251575b50808511610249575b506102016102f6565b9616865216602085015216818301525191829182919091604060608201936001600160a01b0381511683528165ffffffffffff91826020820151166020860152015116910152565b9350886101f8565b9250896101ef565b8151811694506101c1565b50346101015760603660031901126101015761027e6102f6565b906004356001600160a01b038116908181036102f25760209450835265ffffffffffff60a01b7fffffffffffff0000000000000000000000000000000000000000000000000000836102ce610345565b9586888201526102dc61035f565b9586910152519460d01b169260a01b1617178152f35b8480fd5b604051906060820182811067ffffffffffffffff82111761031657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6024359065ffffffffffff8216820361035a57565b600080fd5b6044359065ffffffffffff8216820361035a57565b61037c6102f6565b90600082526000602083015260006040830152565b610399610374565b5065ffffffffffff808260a01c1680156103d4575b6103b66102f6565b926001600160a01b038116845260d01c602084015216604082015290565b50806103ae56fea26469706673582212202002e47417ea82b8b0d610fd64910e89d9aa46439ccacb901379b519eae008e364736f6c63430008110033";

type TestHelpersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHelpersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHelpers__factory extends ContractFactory {
  constructor(...args: TestHelpersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestHelpers> {
    return super.deploy(overrides || {}) as Promise<TestHelpers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestHelpers {
    return super.attach(address) as TestHelpers;
  }
  override connect(signer: Signer): TestHelpers__factory {
    return super.connect(signer) as TestHelpers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHelpersInterface {
    return new utils.Interface(_abi) as TestHelpersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestHelpers {
    return new Contract(address, _abi, signerOrProvider) as TestHelpers;
  }
}

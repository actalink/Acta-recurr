/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestAggregatedAccount,
  TestAggregatedAccountInterface,
} from "../../../contracts/test/TestAggregatedAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "callerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e03461018257601f611a0638819003918201601f19168301916001600160401b038311848410176101875780849260409485528339810103126101825780516001600160a01b0391828216820361018257602001519182168203610182573060805260a05260005460ff8160081c1661012d5760ff808216036100f2575b5060c052604051611868908161019e823960805181818161051d01528181610a430152610bc2015260a0518181816106de015281816107c10152818161087f01528181610cfa01528181610e8a015281816110340152818161163401526117ec015260c0518181816104cf015261071a0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13861007e565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806223de29146101aa57806301ffc9a7146101a1578063150b7a021461019857806318dfb3c71461018f578063245a7bfc146101865780633659cfe61461017d5780633a871cdd146101745780634a58db191461016b5780634d44560d146101625780634f1ef2861461015957806352d1902d1461015057806357d95c43146101475780638da5cb5b1461013e578063b0d691fe14610135578063b61d27f61461012c578063bc197c8114610123578063c399ec881461011a578063c4d66de814610111578063d087d288146101085763f23a6e610361000e576101036110a2565b61000e565b50610103610fdc565b50610103610eef565b50610103610e3b565b50610103610d91565b50610103610d1e565b50610103610cd9565b50610103610cae565b50610103610c7d565b50610103610ba6565b506101036109ec565b5061010361084b565b506101036107a9565b506101036106a1565b506101036104f3565b506101036104ae565b506101036103ab565b5061010361031f565b50610103610265565b506101036101f7565b6001600160a01b038116036101c457565b600080fd5b9181601f840112156101c45782359167ffffffffffffffff83116101c457602083818601950101116101c457565b50346101c45760c03660031901126101c4576102146004356101b3565b61021f6024356101b3565b61022a6044356101b3565b67ffffffffffffffff6084358181116101c45761024b9036906004016101c9565b505060a4359081116101c4576100199036906004016101c9565b50346101c45760203660031901126101c4576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101c45780630a85bd0160e11b602092149081156102f5575b81156102cb575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102c0565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102b9565b50346101c45760803660031901126101c45761033c6004356101b3565b6103476024356101b3565b60643567ffffffffffffffff81116101c4576103679036906004016101c9565b50506020604051630a85bd0160e11b8152f35b9181601f840112156101c45782359167ffffffffffffffff83116101c4576020808501948460051b0101116101c457565b50346101c45760403660031901126101c45767ffffffffffffffff600480358281116101c4576103de903690830161037a565b60249291929384359081116101c4576103fa903690840161037a565b610402611629565b80830361046b5760005b83811061041557005b61044661042b61042683878a6115b1565b6115cf565b6104406104398486886115d9565b36916109b5565b906116bb565b60001981146104575760010161040c565b86601186634e487b7160e01b600052526000fd5b60648460138860206040519362461bcd60e51b85528401528201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b50346101c45760003660031901126101c45760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101c45760203660031901126101c457600435610511816101b3565b6001600160a01b0390817f0000000000000000000000000000000000000000000000000000000000000000169161054a83301415611116565b6105797f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc938285541614611187565b6105816116db565b6040519061058e8261094c565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156105c85750506100199150611285565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610671575b5061065e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b6100199361066c9114611214565b61134a565b61069391925060203d811161069a575b61068b8183610968565b8101906111f8565b90386105ee565b503d610681565b50346101c4576003196060368201126101c4576004359067ffffffffffffffff82116101c45761016091360301126101c4576001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001633036107655761076190600060408051926107188461090f565b7f00000000000000000000000000000000000000000000000000000000000000001692838152826020820152015261075160443561157f565b6040519081529081906020820190565b0390f35b606460405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b50600080600319360112610848576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681813b1561084857602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af1801561083b575b61082f575080f35b61083890610938565b80f35b610843611207565b610827565b80fd5b50346101c457600060403660031901126108485760043561086b816101b3565b6108736116db565b816001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001692833b156108f4576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af1801561083b5761082f575080f35b8280fd5b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761092b57604052565b6109336108f8565b604052565b67ffffffffffffffff811161092b57604052565b6020810190811067ffffffffffffffff82111761092b57604052565b90601f8019910116810190811067ffffffffffffffff82111761092b57604052565b60209067ffffffffffffffff81116109a8575b601f01601f19160190565b6109b06108f8565b61099d565b9291926109c18261098a565b916109cf6040519384610968565b8294818452818301116101c4578281602093846000960137010152565b5060403660031901126101c457600435610a05816101b3565b60243567ffffffffffffffff81116101c457366023820112156101c457610a369036906024816004013591016109b5565b906001600160a01b0391827f00000000000000000000000000000000000000000000000000000000000000001692610a7084301415611116565b610a9f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc948286541614611187565b610aa76116db565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610add5750506100199150611285565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610b86575b50610b735760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b61001993610b819114611214565b61141c565b610b9f91925060203d811161069a5761068b8183610968565b9038610b03565b50346101c45760003660031901126101c4576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c13576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b608460405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b50346101c45760203660031901126101c4576020600435610c9d816101b3565b6001600160a01b0360405191168152f35b50346101c45760003660031901126101c45760206001600160a01b0360005460101c16604051908152f35b50346101c45760003660031901126101c45760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101c45760603660031901126101c457600435610d3c816101b3565b60443567ffffffffffffffff81116101c457600091610d6b610d63849336906004016101c9565b610439611629565b9060208251920190602435905af1610d8161146f565b9015610d8957005b602081519101fd5b50346101c45760a03660031901126101c457610dae6004356101b3565b610db96024356101b3565b67ffffffffffffffff6044358181116101c457610dda90369060040161037a565b50506064358181116101c457610df490369060040161037a565b50506084359081116101c457610e0e9036906004016101c9565b50506040517fbc197c81000000000000000000000000000000000000000000000000000000008152602090f35b50346101c45760003660031901126101c45760206040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610ee2575b600091610ec5575b50604051908152f35b610edc9150823d811161069a5761068b8183610968565b38610ebc565b610eea611207565b610eb4565b50346101c45760203660031901126101c457610f0c6004356101b3565b600054610f3060ff8260081c161580928193610fce575b8115610fae575b50611747565b80610f43600160ff196000541617600055565b610f95575b610f506117b8565b610f5657005b610f6661ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610fa961010061ff00196000541617600055565b610f48565b303b15915081610fc0575b5038610f2a565b6001915060ff161438610fb9565b600160ff8216109150610f23565b50346101c45760003660031901126101c4576107616040517f35567e1a000000000000000000000000000000000000000000000000000000008152306004820152600060248201526020816044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115611095575b600091611077575b506040519081529081906020820190565b61108f915060203d811161069a5761068b8183610968565b38611066565b61109d611207565b61105e565b50346101c45760a03660031901126101c4576110bf6004356101b3565b6110ca6024356101b3565b60843567ffffffffffffffff81116101c4576110ea9036906004016101c9565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b1561111d57565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b1561118e57565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b908160209103126101c4575190565b506040513d6000823e3d90fd5b1561121b57565b608460405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b803b156112e0576001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b608460405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b9061135482611285565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2805115801590611414575b611396575050565b61141191600080604051936113aa8561090f565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af461140b61146f565b916114ea565b50565b50600061138e565b9061142682611285565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061146757611396575050565b50600161138e565b3d1561149a573d906114808261098a565b9161148e6040519384610968565b82523d6000602084013e565b606090565b156114a657565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b9192901561150d57508151156114fe575090565b61150a903b151561149f565b90565b8251909150156115205750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611566575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611543565b806115875750565b600080808093338219f15061141161146f565b50634e487b7160e01b600052603260045260246000fd5b91908110156115c2575b60051b0190565b6115ca61159a565b6115bb565b3561150a816101b3565b919081101561161c575b60051b81013590601e19813603018212156101c457019081359167ffffffffffffffff83116101c45760200182360381136101c4579190565b61162461159a565b6115e3565b6001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001633149081156116aa575b501561166657565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c1633143861165e565b600091829182602083519301915af16116d261146f565b9015610d895750565b6001600160a01b0360005460101c163314801561173e575b156116fa57565b606460405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b503033146116f3565b1561174e57565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff6000541660005560006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8280a356fea26469706673582212205d4788adfc7179580b16ce9837b5a5c79c8f1c1a3231798136d2c2ab9a23083364736f6c63430008110033";

type TestAggregatedAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAggregatedAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAggregatedAccount__factory extends ContractFactory {
  constructor(...args: TestAggregatedAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestAggregatedAccount> {
    return super.deploy(
      anEntryPoint,
      anAggregator,
      overrides || {}
    ) as Promise<TestAggregatedAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anAggregator,
      overrides || {}
    );
  }
  override attach(address: string): TestAggregatedAccount {
    return super.attach(address) as TestAggregatedAccount;
  }
  override connect(signer: Signer): TestAggregatedAccount__factory {
    return super.connect(signer) as TestAggregatedAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAggregatedAccountInterface {
    return new utils.Interface(_abi) as TestAggregatedAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAggregatedAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestAggregatedAccount;
  }
}
